{"ast":null,"code":"import { provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\nexport const appConfig = {\n  providers: [provideZoneChangeDetection({\n    eventCoalescing: true\n  }),\n  // Enables efficient change detection\n  provideRouter(routes),\n  // Provides routing using routes defined in app.routes.ts\n  provideClientHydration() // Allows rehydration in Universal (SSR) apps\n  ]\n};","map":{"version":3,"names":["provideZoneChangeDetection","provideRouter","routes","provideClientHydration","appConfig","providers","eventCoalescing"],"sources":["/workspaces/portfolio/src/app/app.config.ts"],"sourcesContent":["import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app.routes';\nimport { provideClientHydration } from '@angular/platform-browser';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideZoneChangeDetection({ eventCoalescing: true }), // Enables efficient change detection\n    provideRouter(routes), // Provides routing using routes defined in app.routes.ts\n    provideClientHydration() // Allows rehydration in Universal (SSR) apps\n  ]\n};\n"],"mappings":"AAAA,SAA4BA,0BAA0B,QAAQ,eAAe;AAC7E,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,sBAAsB,QAAQ,2BAA2B;AAElE,OAAO,MAAMC,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTL,0BAA0B,CAAC;IAAEM,eAAe,EAAE;EAAI,CAAE,CAAC;EAAE;EACvDL,aAAa,CAACC,MAAM,CAAC;EAAE;EACvBC,sBAAsB,EAAE,CAAC;EAAA;CAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}